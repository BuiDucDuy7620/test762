{"ast":null,"code":"var _jsxFileName = \"D:\\\\Remote\\\\gull-admin\\\\react\\\\src\\\\app\\\\views\\\\sessions\\\\Signup.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      repassword: \"\"\n    };\n\n    this.handleSubmit = (values, {\n      setSubmitting\n    }) => {\n      console.log(values);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-layout-wrap\" // style={{\n      //   backgroundImage: \"url(/assets/images/photo-wide-4.jpg)\",\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card o-hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 text-center \" // style={{\n      //   backgroundSize: \"cover\",\n      //   backgroundImage: \"url(/assets/images/photo-long-3.jpg)\",\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ps-3 auth-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 27\n      }\n    }, \"Your name\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control form-control-rounded\",\n      name: \"username\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 27\n      }\n    }), errors.username && touched.username && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger mt-1 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      className: \"form-control form-control-rounded\",\n      type: \"email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 27\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger mt-1 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 27\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      className: \"form-control form-control-rounded\",\n      type: \"password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger mt-1 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, errors.password)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mb-3 text-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: this.state,\n      validationSchema: SignupSchema,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 27\n      }\n    }, \"Your name\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control form-control-rounded\",\n      name: \"username\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 27\n      }\n    }), errors.username && touched.username && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger mt-1 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 27\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      className: \"form-control form-control-rounded\",\n      type: \"email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 27\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger mt-1 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 27\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      className: \"form-control form-control-rounded\",\n      type: \"password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 27\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger mt-1 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary w-100 my-1 btn-rounded mt-3\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, \"Sign Up\")))))))));\n  }\n\n}\n\nconst SignupSchema = yup.object().shape({\n  username: yup.string().required(\"email is required\"),\n  email: yup.string().email(\"Invalid email\").required(\"email is required\"),\n  password: yup.string().min(8, \"Password must be 8 character long\").required(\"password is required\"),\n  repassword: yup.string().required(\"repeat password\").oneOf([yup.ref(\"password\")], \"Passwords must match\")\n});\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {})(Signup);","map":{"version":3,"sources":["D:/Remote/gull-admin/react/src/app/views/sessions/Signup.jsx"],"names":["React","Component","Formik","yup","connect","Button","Link","Signup","state","email","username","password","repassword","handleSubmit","values","setSubmitting","console","log","render","handleChange","handleBlur","errors","touched","SignupSchema","isSubmitting","object","shape","string","required","min","oneOf","ref","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  state = {\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    repassword: \"\",\n  };\n\n  handleSubmit = (values, { setSubmitting }) => {\n    console.log(values);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"auth-layout-wrap\"\n        // style={{\n        //   backgroundImage: \"url(/assets/images/photo-wide-4.jpg)\",\n        // }}\n      >\n        <div className=\"auth-content\">\n          <div className=\"card o-hidden\">\n            <div className=\"row\">\n              <div\n                className=\"col-md-6 text-center \"\n                // style={{\n                //   backgroundSize: \"cover\",\n                //   backgroundImage: \"url(/assets/images/photo-long-3.jpg)\",\n                // }}\n              >\n                <div className=\"ps-3 auth-right\">\n                  <div className=\"form-group\">\n                          <label htmlFor=\"username\">Your name</label>\n                          <input\n                            className=\"form-control form-control-rounded\"\n                            name=\"username\"\n                            type=\"text\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.username}\n                          />\n                          {errors.username && touched.username && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.username}\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"email\">Email address</label>\n                          <input\n                            name=\"email\"\n                            className=\"form-control form-control-rounded\"\n                            type=\"email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                          />\n                          {errors.email && touched.email && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.email}\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"password\">Password</label>\n                          <input\n                            name=\"password\"\n                            className=\"form-control form-control-rounded\"\n                            type=\"password\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                          />\n                          {errors.password && touched.password && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.password}\n                            </div>\n                          )}\n                        </div>\n                        \n                </div>\n              </div>\n\n              <div className=\"col-md-6\">\n                <div className=\"p-4\">\n                  <h1 className=\"mb-3 text-18\">Sign Up</h1>\n                  <Formik\n                    initialValues={this.state}\n                    validationSchema={SignupSchema}\n                    onSubmit={this.handleSubmit}\n                  >\n                    {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting,\n                    }) => (\n                      <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"username\">Your name</label>\n                          <input\n                            className=\"form-control form-control-rounded\"\n                            name=\"username\"\n                            type=\"text\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.username}\n                          />\n                          {errors.username && touched.username && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.username}\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"email\">Email address</label>\n                          <input\n                            name=\"email\"\n                            className=\"form-control form-control-rounded\"\n                            type=\"email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                          />\n                          {errors.email && touched.email && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.email}\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"password\">Password</label>\n                          <input\n                            name=\"password\"\n                            className=\"form-control form-control-rounded\"\n                            type=\"password\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                          />\n                          {errors.password && touched.password && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.password}\n                            </div>\n                          )}\n                        </div>\n                        \n                        <button\n                          className=\"btn btn-primary w-100 my-1 btn-rounded mt-3\"\n                          type=\"submit\"\n                        >\n                          Sign Up\n                        </button>\n                      </form>\n                    )}\n                  </Formik>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst SignupSchema = yup.object().shape({\n  username: yup.string().required(\"email is required\"),\n  email: yup.string().email(\"Invalid email\").required(\"email is required\"),\n  password: yup\n    .string()\n    .min(8, \"Password must be 8 character long\")\n    .required(\"password is required\"),\n  repassword: yup\n    .string()\n    .required(\"repeat password\")\n    .oneOf([yup.ref(\"password\")], \"Passwords must match\"),\n});\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, {})(Signup);\n"]},"metadata":{},"sourceType":"module"}