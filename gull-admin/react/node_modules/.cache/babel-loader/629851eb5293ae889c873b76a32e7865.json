{"ast":null,"code":"var _jsxFileName = \"D:\\\\Remote\\\\gull-admin\\\\react\\\\src\\\\app\\\\views\\\\sessions\\\\Signup.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      repassword: \"\"\n    };\n\n    this.handleSubmit = (values, {\n      setSubmitting\n    }) => {\n      console.log(values);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-layout-wrap\" // style={{\n      //   backgroundImage: \"url(/assets/images/photo-wide-4.jpg)\",\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card o-hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mb-3 text-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: this.state,\n      validationSchema: SignupSchema,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary w-100 my-1 btn-rounded mt-3\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Sign Up\")))))))));\n  }\n\n}\n\nconst SignupSchema = yup.object().shape({\n  username: yup.string().required(\"email is required\"),\n  email: yup.string().email(\"Invalid email\").required(\"email is required\"),\n  password: yup.string().min(8, \"Password must be 8 character long\").required(\"password is required\"),\n  repassword: yup.string().required(\"repeat password\").oneOf([yup.ref(\"password\")], \"Passwords must match\")\n});\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {})(Signup);","map":{"version":3,"sources":["D:/Remote/gull-admin/react/src/app/views/sessions/Signup.jsx"],"names":["React","Component","Formik","yup","connect","Button","Link","Signup","state","email","username","password","repassword","handleSubmit","values","setSubmitting","console","log","render","SignupSchema","errors","touched","handleChange","handleBlur","isSubmitting","object","shape","string","required","min","oneOf","ref","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  state = {\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    repassword: \"\",\n  };\n\n  handleSubmit = (values, { setSubmitting }) => {\n    console.log(values);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"auth-layout-wrap\"\n      // style={{\n      //   backgroundImage: \"url(/assets/images/photo-wide-4.jpg)\",\n      // }}\n      >\n        <div className=\"auth-content\">\n          <div className=\"card o-hidden\">\n            <div className=\"row\">\n\n\n              <div className=\"col-md-6\">\n                <div className=\"p-4\">\n                  <h1 className=\"mb-3 text-18\">Sign Up</h1>\n                  <Formik\n                    initialValues={this.state}\n                    validationSchema={SignupSchema}\n                    onSubmit={this.handleSubmit}\n                  >\n                    {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting,\n                    }) => (\n                      <form onSubmit={handleSubmit}>\n                       <div></div>\n\n                        <button\n                          className=\"btn btn-primary w-100 my-1 btn-rounded mt-3\"\n                          type=\"submit\"\n                        >\n                          Sign Up\n                        </button>\n                      </form>\n                    )}\n                  </Formik>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst SignupSchema = yup.object().shape({\n  username: yup.string().required(\"email is required\"),\n  email: yup.string().email(\"Invalid email\").required(\"email is required\"),\n  password: yup\n    .string()\n    .min(8, \"Password must be 8 character long\")\n    .required(\"password is required\"),\n  repassword: yup\n    .string()\n    .required(\"repeat password\")\n    .oneOf([yup.ref(\"password\")], \"Passwords must match\"),\n});\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, {})(Signup);\n"]},"metadata":{},"sourceType":"module"}